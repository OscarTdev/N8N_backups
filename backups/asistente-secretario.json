{
  "createdAt": "2025-09-08T05:41:00.048Z",
  "updatedAt": "2025-09-14T21:40:30.801Z",
  "id": "PvAlTCMXawd4Tqtq",
  "name": "Asistente-secretario",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9ab83bb8-0010-4684-ae19-79e992cb39ea",
              "name": "Account_id",
              "value": "={{ $json.body.conversation.messages[0].id }}",
              "type": "string"
            },
            {
              "id": "62738a51-4284-40b5-a761-0dd788569ab6",
              "name": "Text",
              "value": "={{ $json.body.conversation.messages[0].content_type }}",
              "type": "string"
            },
            {
              "id": "a164e7ab-c1c1-4a84-b13d-b59d5c7ab0ba",
              "name": "Conversation_id",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "string"
            },
            {
              "id": "d471237d-18dd-4891-a947-7a19b7627a2a",
              "name": "Message_type",
              "value": "={{ $json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "189cb727-75b5-48ce-b34e-82411aff0639",
              "name": "User_name",
              "value": "={{ $json.body.conversation.messages[0].sender.name }}",
              "type": "string"
            },
            {
              "id": "ef190ad8-62f7-4a52-bfa5-2b610a3bd884",
              "name": "Avatar",
              "value": "={{ $json.body.conversation.meta.sender.thumbnail }}",
              "type": "string"
            },
            {
              "id": "cd69c356-fb57-4811-8b8e-b5801d2f8e5b",
              "name": "User_number",
              "value": "={{ $json.body.conversation.messages[0].sender.phone_number }}",
              "type": "string"
            },
            {
              "id": "dfbfd43d-3d70-448e-8e9d-416a776b2b70",
              "name": "User_message",
              "value": "={{ $json.body.conversation.messages[0].content }}",
              "type": "string"
            },
            {
              "id": "88ebbe20-595f-466b-859a-26c3b31c4323",
              "name": "body",
              "value": "={{ $json.body }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        672,
        304
      ],
      "id": "7941e104-1483-4a45-9410-261f6d610e38",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## üì© Entrada de mensaje mediante Webhook api",
        "height": 300,
        "width": 420
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        464,
        160
      ],
      "id": "7b9045f6-2e56-4d53-bfe5-b857457697d3",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## üß† Identificaci√≥n de mensaje\n\nAqu√≠ identificamos si el mensaje recibido es un **audio** o un **texto**.\n\n- Si es **texto**, se env√≠a directamente al agente para su interpretaci√≥n.\n- Si es **audio**, se redirige a un nodo de tipo `HTTP Request` para transcribir el contenido a texto, de modo que el agente pueda interpretarlo correctamente.\n",
        "height": 764,
        "width": 908,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1968,
        -80
      ],
      "id": "04042c95-0b6d-4cdc-8b7d-9d1467684a44",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## ü§ñ Acci√≥n del agente\n\nEn esta zona, el agente entra en acci√≥n:\n\n- **Interpreta la informaci√≥n recibida** (ya sea texto o transcripci√≥n de audio).\n- **Toma decisiones** en base al contenido del mensaje.\n- **Ejecuta las herramientas disponibles** (como consultas a base de datos, generaci√≥n de respuestas, acciones en Shopify, etc.) para ofrecer una respuesta adecuada o realizar una tarea automatizada.\n",
        "height": 712,
        "width": 960,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2912,
        32
      ],
      "id": "4022bce2-6787-4767-b7d6-0b5de1ddba34",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## üì§ Respuesta chatwoot\n\nEste nodo se encarga de **enviar la respuesta generada por el agente** a la misma conversaci√≥n de WhatsApp desde donde se recibi√≥ el mensaje.\n\n- Mantiene el contexto de la conversaci√≥n.\n\n",
        "height": 632,
        "width": 768,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3648,
        128
      ],
      "id": "d7f018ee-e942-4c75-b209-8dbeab3a4275",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# üõ†Ô∏è Herramientas Utilizadas\n\n| Herramienta        | Descripci√≥n                                                                                         |               |\n|--------------------|-----------------------------------------------------------------------------------------------------|-----------------------\n",
        "height": 540,
        "width": 660,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        464,
        -80
      ],
      "id": "278cd68c-b2de-46b5-988d-8e5e6c2a2d69",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const originalText = $input.first().json.output;\n\n  if (typeof originalText !== 'string') {\n    return {\n      json: {\n        error: 'El campo \"text\" no existe o no es un texto',\n        original: originalText\n      }\n    };\n  }\n\n  let cleaned = originalText\n    .replace(/<[^>]*>/g, '')                     // Quitar HTML\n    .replace(/\\r?\\n|\\r/g, ' ')                   // Saltos de l√≠nea a espacio\n    .replace(/\\t+/g, ' ')                        // Tabs a espacio\n    .replace(/[^\\p{L}\\p{N},.¬ø?:?\\s\\p{Emoji}]+/gu, '')    // Mantener letras, n√∫meros, , . : ¬ø ? y espacios\n    .replace(/\\s+/g, ' ')                        // Normalizar m√∫ltiples espacios\n    .trim();                                     // Quitar espacios extremos\n\n  return {\n    json: {\n      cleaned\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3856,
        304
      ],
      "id": "1f8df89c-90ae-41eb-9dcc-57bcea084c89",
      "name": "limpiar texto"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatwoot",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        480,
        304
      ],
      "id": "025f0fbc-4874-4c75-b9ef-3cb44b39b764",
      "name": "Webhook",
      "webhookId": "bba47717-45ac-413f-8b4e-98d566b1e438"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        3632,
        608
      ],
      "id": "bbe717ad-cb6d-4a8d-9c89-65cba589fbf4",
      "name": "Calculator"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.type }}\n{{ $json.data }}\n{{ $json.Account_id }}\n{{ $json.date_time }}\n{{ $json.Conversation_id }}\n{{ $json.content_Type }}\n{{ $json.User_name }}\n{{ $json.User_number }}",
        "options": {
          "systemMessage": "=Eres Aura, el asistente personal de Oscar, un estudiante de ingenier√≠a. Tu objetivo es optimizar su vida acad√©mica y personal con un tono proactivo, amigable y eficiente.\n\nFuncionalidades Clave\nGoogle Calendar: Crea eventos, recordatorios y gestiona tareas para clases y proyectos.\n\nGoogle Sheets: Registra y organiza informaci√≥n estructurada, como proyectos y notas de c√≥digo.\n\nGoogle Docs: Organiza y guarda documentos importantes, como apuntes y borradores.\n\nBase de Datos PostgreSQL: Almacena y gestiona datos persistentes y relaciones complejas.\n\nGesti√≥n de Archivos: Sube documentos, fotos y videos a Google Drive y registra su enlace y metadatos en Google Sheets.\n\nCalculadora: Resuelve operaciones matem√°ticas para agilizar c√°lculos de proyectos o tareas.\n\nGesti√≥n Inteligente: Prioriza mensajes cruciales, resume los m√°s importantes y clasifica contactos como \"acad√©micos\".\n\nInstrucci√≥n para el Modelo de Lenguaje\nAnaliza la intenci√≥n del mensaje de Oscar.\n\nTareas/Eventos: Usa Google Calendar.\n\nNotas o Informaci√≥n Estructurada: Usa Google Sheets o PostgreSQL seg√∫n la complejidad.\n\nDocumentos/Archivos: S√∫belos a Google Drive y registra su enlace en Google Sheets.\n\nArchivos de texto: Usa Google Docs.\n\nC√°lculos Matem√°ticos: Usa la Calculadora.\n\nOtros mensajes: Si no encaja en lo anterior, simplemente notifica a Oscar.\n\nUsa emojis si lo crees conveniente.\n\nLa fecha y hora de hoy es: {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        3392,
        304
      ],
      "id": "e77a8492-ace5-495d-bba9-4b7204d77346",
      "name": "AI Agent Personal"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.message_type }}",
                    "rightValue": "=incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "bc67991a-937f-4e7c-8eb0-88d23f3b6442"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1cf35d47-865e-49a8-bc23-94d8eec6b005",
                    "leftValue": "={{ $json.body.message_type }}",
                    "rightValue": "outgoing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outgoing"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        864,
        320
      ],
      "id": "4f425d35-9d9c-47c1-abf1-41330393ae5d",
      "name": "Validador"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body.sender.identifier }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3296,
        608
      ],
      "id": "dd54da8e-832d-457a-a8c1-4acaa9432028",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "QosXzwh6g2swbqpP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "description": "Aqui encuentras google Calendar,Task,Gmail,Sheets, Contacts, y mas especifica la instruccion detallada . envia a este formato {{ $json.chatInput }}",
        "workflowId": {
          "__rl": true,
          "value": "XvnvxquH1ojgelxO",
          "mode": "list",
          "cachedResultName": "Servicios Google"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        3456,
        608
      ],
      "id": "f8b0a02a-e786-4288-939c-904797a29ef2",
      "name": "Servicios Google"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3168,
        608
      ],
      "id": "a7b99b77-7d1f-42e8-95cf-746a6f64995e",
      "name": "Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "0RrtN5q8GEUGAkyZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9ab83bb8-0010-4684-ae19-79e992cb39ea",
              "name": "Account_id",
              "value": "={{ $json.body.conversation.messages[0].id }}",
              "type": "string"
            },
            {
              "id": "62738a51-4284-40b5-a761-0dd788569ab6",
              "name": "Message_type",
              "value": "={{ $json.body.conversation.messages[0].content_type }}",
              "type": "string"
            },
            {
              "id": "a164e7ab-c1c1-4a84-b13d-b59d5c7ab0ba",
              "name": "Conversation_id",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "string"
            },
            {
              "id": "d471237d-18dd-4891-a947-7a19b7627a2a",
              "name": "message_type",
              "value": "={{ $json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "189cb727-75b5-48ce-b34e-82411aff0639",
              "name": "User_name",
              "value": "={{ $json.body.conversation.messages[0].sender.name }}",
              "type": "string"
            },
            {
              "id": "ef190ad8-62f7-4a52-bfa5-2b610a3bd884",
              "name": "Avatar",
              "value": "={{ $json.body.conversation.meta.sender.thumbnail }}",
              "type": "string"
            },
            {
              "id": "cd69c356-fb57-4811-8b8e-b5801d2f8e5b",
              "name": "User_number",
              "value": "={{ $json.body.conversation.messages[0].sender.phone_number }}",
              "type": "string"
            },
            {
              "id": "dfbfd43d-3d70-448e-8e9d-416a776b2b70",
              "name": "User_message",
              "value": "={{ $json.User_message }}",
              "type": "string"
            },
            {
              "id": "e1e64f10-3b36-4410-ab79-0067a2f6b713",
              "name": "date_time",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "5696fbe7-1169-4446-9a36-ba9480595a49",
              "name": "Image",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].data_url }}",
              "type": "string"
            },
            {
              "id": "250a53f5-d974-415f-a1dc-cc3018a85eac",
              "name": "audio",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].data_url }}",
              "type": "string"
            },
            {
              "id": "bdcbc113-0f99-45db-8561-2b3903262562",
              "name": "file",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].data_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        304
      ],
      "id": "d528787f-71f1-4c36-8a55-10fa937ba0ca",
      "name": "Mapear mansajes"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatwoot-production-0c80.up.railway.app/api/v1/accounts/2/conversations/{{ $('Mapear mansajes').item.json.Conversation_id }}/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=api_access_token",
              "value": "FmyHd3M2VsuRWWRzea8fibR1"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ $json.cleaned }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4144,
        304
      ],
      "id": "c93258bc-3f90-428e-8a6a-27f39c1a1963",
      "name": "Send message"
    },
    {
      "parameters": {
        "content": "\n##Time Of Wait message\n",
        "height": 640,
        "width": 832
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        32
      ],
      "typeVersion": 1,
      "id": "0dd8435c-3891-449e-8db9-37e7370cf73e",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=conversation-{{ $json.accountid }}",
        "messageData": "={{ $json.data }}\n"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1744,
        304
      ],
      "id": "63f384a6-8e3c-4a65-a274-c1a8f13778d8",
      "name": "Buffer data",
      "credentials": {
        "redis": {
          "id": "QDjrDYFJ6KhC0fgw",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Webhook').item.json.body.conversation.messages[0].sender.identifier }}",
        "messageData": "={{ $json.data }}\n",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1536,
        304
      ],
      "id": "413fbb9a-98ed-4639-b79d-0a68e19fc9b2",
      "name": "Redis Buffer",
      "credentials": {
        "redis": {
          "id": "QDjrDYFJ6KhC0fgw",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Redis Buffer').item.json.accountid }}",
                    "rightValue": "={{ $('Mapear mansajes').item.json.Account_id }}\n",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "27ffe774-8fb9-4fed-a1c8-2e60245de040"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ignorar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "759f6526-40ff-4bc5-8de5-b70f8076dbb0",
                    "leftValue": "={{ $json.date_time}}",
                    "rightValue": "={{ $now.minus(15, 'seconds').toLocal()\n}}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continuar"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "ignoreCase": true,
          "renameFallbackOutput": "waiting"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1920,
        288
      ],
      "id": "75fe4216-233a-498f-a254-d0b9a96bb5c8",
      "name": "Switch1"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1920,
        480
      ],
      "id": "a4658970-1edc-4f19-a778-071b493224d8",
      "name": "Wait",
      "webhookId": "be6fab4e-cf66-4454-861f-6a2719528742"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2048,
        128
      ],
      "id": "5aa3ed27-686b-4072-8c9d-e48fcdae2944",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Webhook').item.json.body.sender.identifier }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2144,
        304
      ],
      "id": "a6d337ef-9873-4d4f-820c-e233a3153f31",
      "name": "Redis_buffer_delete",
      "credentials": {
        "redis": {
          "id": "QDjrDYFJ6KhC0fgw",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.data.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        448
      ],
      "id": "82558c90-3a36-4081-b7ec-764a21e333e1",
      "name": "URL-DATOS1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.type }}",
                    "rightValue": "=audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "be9dbcd5-0882-4ce9-9822-305865fae492"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7a9b1735-d08d-44dc-9925-bc0df04fb404",
                    "leftValue": "=",
                    "rightValue": "=",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "507e6cf9-ca8e-4b43-80bb-ff653c09c9af",
                    "leftValue": "image",
                    "rightValue": "={{ $json.type }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2528,
        288
      ],
      "id": "06edec70-ef57-414c-ba39-2b73c7756a02",
      "name": "Switch2"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2912,
        144
      ],
      "id": "26369f2b-aae4-44f6-9f9c-9a4754bf5526",
      "name": "Transcribir audio1",
      "credentials": {
        "openAiApi": {
          "id": "JhYbbP1gsYc0w557",
          "name": "Unnamed credential"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.body.attachments[0].data_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2752,
        144
      ],
      "id": "36036d30-1cdb-440e-aab4-8aa423cc8984",
      "name": "URL-DATOS2"
    },
    {
      "parameters": {
        "jsCode": "// Este c√≥digo prepara los datos para el flujo, extrayendo todas las propiedades de la entrada.\nconst incomingData = $json;\n\n// --- 1. Extracci√≥n de Datos de la Entrada ---\n// Extrae los datos del mensaje y archivos. Usa || null para evitar errores.\nconst message = incomingData.User_message || null;\nconst image = incomingData.Image || null;\nconst audio = incomingData.Audio || null;\nconst file = incomingData.File || null;\n\n// Extrae los datos de la conversaci√≥n, incluyendo el tipo de mensaje de Chatwoot\nconst conversationId = incomingData.Conversation_id || null;\nconst message_Type = incomingData.message_type || null; // Extrae el valor 'incoming' o 'outgoing'\nconst userName = incomingData.User_name || null;\nconst userNumber = incomingData.User_number || null;\n\n// --- 2. Determinaci√≥n del Tipo de Archivo ---\nlet messageType;\nlet messageData = {};\n\nif (image) {\n  messageType = 'image';\n  messageData = {\n    url: image,\n    message: message\n  };\n} else if (audio) {\n  messageType = 'audio';\n  messageData = {\n    url: audio,\n    message: message\n  };\n} else if (file) {\n  messageType = 'file';\n  messageData = {\n    url: file,\n    message: message\n  };\n} else {\n  messageType = 'message';\n  messageData = {\n    message: message\n  };\n}\n\n// --- 3. Creaci√≥n de la Salida ---\n// Retorna un objeto JSON con todos los datos organizados.\nreturn [{\n  json: {\n    type: messageType,\n    data: messageData,\n    Account_id: incomingData.Account_id,\n    date_time: incomingData.date_time,\n    Conversation_id: conversationId,\n    \"content_Type\": message_Type, // Aqu√≠ est√° la propiedad lista para ser evaluada\n    User_name: userName,\n    User_number: userNumber\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1328,
        304
      ],
      "id": "c474b276-21ed-4595-8413-77c471fb3660",
      "name": "Code"
    },
    {
      "parameters": {
        "resource": "opportunity",
        "operation": "update",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.odoo",
      "typeVersion": 1,
      "position": [
        116.79999999999994,
        0
      ],
      "id": "631f8b62-0d03-4cec-adfc-5a15a58fa9a7",
      "name": "Update an opportunity",
      "credentials": {
        "odooApi": {
          "id": "A9gezJhn2F4PSIXR",
          "name": "Odoo account"
        }
      }
    }
  ],
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Validador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "limpiar texto": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Personal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Personal": {
      "main": [
        [
          {
            "node": "limpiar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validador": {
      "main": [
        [
          {
            "node": "Mapear mansajes",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Personal",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Servicios Google": {
      "ai_tool": [
        [
          {
            "node": "AI Agent Personal",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Personal",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mapear mansajes": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message": {
      "main": [
        []
      ]
    },
    "Redis Buffer": {
      "main": [
        [
          {
            "node": "Buffer data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buffer data": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis_buffer_delete",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Buffer data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis_buffer_delete": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL-DATOS1": {
      "main": [
        [
          {
            "node": "AI Agent Personal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "URL-DATOS2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent Personal",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "URL-DATOS1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribir audio1": {
      "main": [
        [
          {
            "node": "AI Agent Personal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL-DATOS2": {
      "main": [
        [
          {
            "node": "Transcribir audio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Redis Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Bogota",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "6351cb17-e2ce-4407-8261-5aa03d0ed509",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-08T05:41:00.048Z",
      "updatedAt": "2025-09-08T05:41:00.048Z",
      "role": "workflow:owner",
      "workflowId": "PvAlTCMXawd4Tqtq",
      "projectId": "XjBHfNWSN1GAgqMC"
    }
  ],
  "tags": []
}